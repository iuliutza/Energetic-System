Starting audit...
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:12:5: Class 'CostChanges' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChanges' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:16:5: Class 'CostChanges' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChanges' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:16:23: Parameter id should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:20:5: Class 'CostChanges' looks like designed for extension (can be subclassed), but the method 'getInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChanges' final or making the method 'getInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:24:5: Class 'CostChanges' looks like designed for extension (can be subclassed), but the method 'setInfrastructureCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChanges' final or making the method 'setInfrastructureCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:24:39: Parameter infrastructureCost should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:28:5: Class 'CostChanges' looks like designed for extension (can be subclassed), but the method 'getProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChanges' final or making the method 'getProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:32:5: Class 'CostChanges' looks like designed for extension (can be subclassed), but the method 'setProductionCost' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CostChanges' final or making the method 'setProductionCost' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/CostChanges.java:32:35: Parameter productionCost should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Main.java:1:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Main.java:3:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Main.java:3:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:6:22: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:12:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getConsumerId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getConsumerId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:16:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setConsumerId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setConsumerId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:16:31: Parameter consumerId should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:20:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:24:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:24:26: Parameter price should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:28:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'getRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'getRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:32:5: Class 'Contract' looks like designed for extension (can be subclassed), but the method 'setRemainedContractMonths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contract' final or making the method 'setRemainedContractMonths' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/Contract.java:32:43: Parameter remainedContractMonths should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/ShowEntity.java:13:5: Class 'ShowEntity' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowEntity' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/ShowEntity.java:17:5: Class 'ShowEntity' looks like designed for extension (can be subclassed), but the method 'getInitialBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ShowEntity' final or making the method 'getInitialBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/ConsumerInput.java:3:52: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/ConsumerInput.java:17:33: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/ConsumerInput.java:18:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/ConsumerInput.java:19:41: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/ConsumerInput.java:20:63: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/CostChanges.java:28:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/CostChanges.java:29:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/CostChanges.java:30:62: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/CostChanges.java:31:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/InitialData.java:14:24: Parameter consumers should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/InitialData.java:14:55: Parameter distributors should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/MonthlyUpdates.java:14:27: Parameter newConsumers should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/MonthlyUpdates.java:14:61: Parameter costChanges should be final. [FinalParameters]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/MonthlyUpdates.java:19:5: Class 'MonthlyUpdates' looks like designed for extension (can be subclassed), but the method 'getNewConsumers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdates' final or making the method 'getNewConsumers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/MonthlyUpdates.java:23:5: Class 'MonthlyUpdates' looks like designed for extension (can be subclassed), but the method 'getCostChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyUpdates' final or making the method 'getCostChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/DistributorInput.java:32:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/DistributorInput.java:33:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/DistributorInput.java:34:76: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/DistributorInput.java:35:68: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/DistributorInput.java:36:40: '+' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/DistributorInput.java:36:40: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iulia/IdeaProjects/Project-etapa1/teme/proiect-etapa1/./src/fileio/DistributorInput.java:37:63: '+' should be on a new line. [OperatorWrap]
Audit done.
Checkstyle ends with 46 errors.
